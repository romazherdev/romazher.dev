---
import { NAVIGATION } from '../data/routing';
import ThemeSwitcher from './ThemeSwitcher.astro';

const activeRoute =
  Astro.url.pathname.length > 1
    ? Astro.url.pathname.replace(/\/$/, '')
    : Astro.url.pathname; // root "/"
const isActiveRoute = (url: string) => activeRoute === url;
---

<header
  id="header"
  class="py-5 sticky top-0 max-md:border-b border-decorative z-10 bg-background data-[stuck]:border-b"
>
  <div class="container flex items-center justify-between">
    <button
      id="menu-toggle"
      type="button"
      aria-label="Toggle menu"
      class="peer group md:hidden inline-grid grid-cols-[auto_auto] gap-2"
      aria-expanded="false"
      aria-controls="menu"
    >
      <svg
        class="group-aria-[expanded=true]:hidden"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
        fill="currentcolor"
      >
        <path
          d="M4 18H20C20.55 18 21 17.55 21 17C21 16.45 20.55 16 20 16H4C3.45 16 3 16.45 3 17C3 17.55 3.45 18 4 18ZM4 13H20C20.55 13 21 12.55 21 12C21 11.45 20.55 11 20 11H4C3.45 11 3 11.45 3 12C3 12.55 3.45 13 4 13ZM3 7C3 7.55 3.45 8 4 8H20C20.55 8 21 7.55 21 7C21 6.45 20.55 6 20 6H4C3.45 6 3 6.45 3 7Z"
        ></path>
      </svg>

      <svg
        class="group-aria-[expanded=false]:hidden"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
        fill="currentcolor"
      >
        <path
          d="M6.4 19L5 17.6L10.6 12L5 6.4L6.4 5L12 10.6L17.6 5L19 6.4L13.4 12L19 17.6L17.6 19L12 13.4L6.4 19Z"
        ></path>
      </svg>

      <span class="group-aria-[expanded=true]:hidden">Menu</span>
      <span class="group-aria-[expanded=false]:hidden">Close</span>
    </button>

    <div
      class="max-md:fixed max-md:inset-0 max-md:-z-10 max-md:-translate-x-full bg-background max-md:transition-transform max-md:duration-200 motion-reduce:duration-0 peer-aria-[expanded=true]:translate-x-0 shadow-2xl grid"
    >
      <div
        id="menu_container"
        class="flex md:justify-between menu-closed max-md:py-20"
      >
        <nav
          aria-label="Main"
          id="menu"
          class="max-md:flex-1 flex flex-col justify-center"
        >
          <ul class="max-md:flex-col flex items-center gap-8">
            {
              NAVIGATION.map(({ url, label }) => (
                <li>
                  <a
                    class="w-1/3 border-b-2 border-transparent pb-2 text-base uppercase text-font-secondary no-underline hover:border-font-primary hover:text-font-primary max-md:text-2xl aria-[current=page]:text-font-primary aria-[current=page]:!border-primary"
                    href={url}
                    aria-current={isActiveRoute(url) ? 'page' : 'false'}
                  >
                    {label}
                  </a>
                </li>
              ))
            }
          </ul>
        </nav>
      </div>
    </div>

    <ThemeSwitcher />
  </div>
</header>

<script>
  import { createFocusTrap } from 'focus-trap';

  const header = document.getElementById('header') as HTMLElement;
  const menuAnimatedContainer = document.getElementById(
    'menu_container'
  ) as HTMLElement;
  const toggle = document.getElementById('menu-toggle') as HTMLButtonElement;
  const focusTrap = createFocusTrap(header);

  toggle?.addEventListener('click', (e) => {
    const wasExpanded = JSON.parse(
      toggle.getAttribute('aria-expanded') || 'false'
    );
    const currentlyExpanded = !wasExpanded;

    menuAnimatedContainer.classList.toggle('menu-closed', wasExpanded);
    toggle.setAttribute('aria-expanded', String(currentlyExpanded));
    currentlyExpanded ? focusTrap.activate() : focusTrap.deactivate();
    document.body.classList.toggle('menu-opened', currentlyExpanded);
  });

  window.addEventListener(
    'scroll',
    () => {
      header.toggleAttribute('data-stuck', window.scrollY > 50);
    },
    true
  );
</script>
